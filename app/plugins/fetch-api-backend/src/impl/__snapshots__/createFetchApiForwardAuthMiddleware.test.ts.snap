// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createFetchApiForwardAuthMiddleware Should work with Request input but url disallowed by config 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {},
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input but url disallowed by function 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {},
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, but no auth header 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {},
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, url allowed by config allow list, but no request 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {},
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, url allowed by config baseUrl, but no request 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {},
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, url allowed by function, but no request 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {},
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, with auth already set 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {
      "authorization": "abc",
    },
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, with auth header 1`] = `
[
  Request {
    "body": null,
    "bodyUsed": false,
    "cache": "default",
    "credentials": "same-origin",
    "destination": "",
    "headers": Headers {
      "authorization": "my auth token",
      "header1": "abc",
    },
    "integrity": "",
    "keepalive": false,
    "method": "GET",
    "mode": "cors",
    "redirect": "follow",
    "referrer": "about:client",
    "referrerPolicy": "",
    "signal": AbortSignal {
      "aborted": false,
      "reason": undefined,
    },
    "url": "https://test.com/",
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input but url disallowed by config 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input but url disallowed by function 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, but no auth header 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, empty init, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header array, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "Header1",
        "abc",
      ],
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header array, with auth header already set 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "authorization",
        "abc",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header object, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": {
      "Authorization": "my auth token",
      "Header1": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header object, with auth header already set 1`] = `
[
  "https://test.com/",
  {
    "headers": {
      "authorization": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with headers instance, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": Headers {
      "authorization": "my auth token",
      "header1": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with headers instance, with auth header already set 1`] = `
[
  "https://test.com/",
  {
    "headers": Headers {
      "authorization": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, no init, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, url allowed by config allow list, but no request 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, url allowed by config baseUrl, but no request 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, url allowed by function, but no request 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input but url disallowed by config 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input but url disallowed by function 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, but no auth header 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, empty init, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header array, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "Header1",
        "abc",
      ],
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header array, with auth header already set 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "authorization",
        "abc",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header object, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": {
      "Authorization": "my auth token",
      "Header1": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header object, with auth header already set 1`] = `
[
  "https://test.com",
  {
    "headers": {
      "authorization": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with headers instance, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": Headers {
      "authorization": "my auth token",
      "header1": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with headers instance, with auth header already set 1`] = `
[
  "https://test.com",
  {
    "headers": Headers {
      "authorization": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, no init, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, url allowed by config allow list, but no request 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, url allowed by config baseUrl, but no request 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, url allowed by function, but no request 1`] = `
[
  "https://test.com",
  undefined,
]
`;
