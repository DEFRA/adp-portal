// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createFetchApiForwardAuthMiddleware Should work with Request input but url disallowed by config 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers {},
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input but url disallowed by function 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers {},
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, but no auth header 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers {},
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, url allowed by config allow list, but no request 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers {},
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, url allowed by config baseUrl, but no request 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers {},
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, url allowed by function, but no request 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers {},
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, with auth already set 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers { authorization: 'abc' },
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with Request input, with auth header 1`] = `
[
  Request {
    method: 'GET',
    url: 'https://test.com/',
    headers: Headers { Header1: 'abc', Authorization: 'my auth token' },
    destination: '',
    referrer: 'about:client',
    referrerPolicy: '',
    mode: 'cors',
    credentials: 'same-origin',
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    keepalive: false,
    isReloadNavigation: false,
    isHistoryNavigation: false,
    signal: AbortSignal { aborted: false }
  },
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input but url disallowed by config 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input but url disallowed by function 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, but no auth header 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, empty init, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header array, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "Header1",
        "abc",
      ],
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header array, with auth header already set 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "authorization",
        "abc",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header object, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": {
      "Authorization": "my auth token",
      "Header1": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with header object, with auth header already set 1`] = `
[
  "https://test.com/",
  {
    "headers": {
      "authorization": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with headers instance, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": Headers {
      Symbol(headers list): HeadersList {
        "cookies": null,
        Symbol(headers map): Map {
          "header1" => {
            "name": "Header1",
            "value": "abc",
          },
          "authorization" => {
            "name": "Authorization",
            "value": "my auth token",
          },
        },
        Symbol(headers map sorted): null,
      },
      Symbol(guard): "none",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, init with headers instance, with auth header already set 1`] = `
[
  "https://test.com/",
  {
    "headers": Headers {
      Symbol(headers list): HeadersList {
        "cookies": null,
        Symbol(headers map): Map {
          "authorization" => {
            "name": "authorization",
            "value": "abc",
          },
        },
        Symbol(headers map sorted): null,
      },
      Symbol(guard): "none",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, no init, with auth header 1`] = `
[
  "https://test.com/",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, url allowed by config allow list, but no request 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, url allowed by config baseUrl, but no request 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with URL input, url allowed by function, but no request 1`] = `
[
  "https://test.com/",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input but url disallowed by config 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input but url disallowed by function 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, but no auth header 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, empty init, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header array, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "Header1",
        "abc",
      ],
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header array, with auth header already set 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "authorization",
        "abc",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header object, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": {
      "Authorization": "my auth token",
      "Header1": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with header object, with auth header already set 1`] = `
[
  "https://test.com",
  {
    "headers": {
      "authorization": "abc",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with headers instance, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": Headers {
      Symbol(headers list): HeadersList {
        "cookies": null,
        Symbol(headers map): Map {
          "header1" => {
            "name": "Header1",
            "value": "abc",
          },
          "authorization" => {
            "name": "Authorization",
            "value": "my auth token",
          },
        },
        Symbol(headers map sorted): null,
      },
      Symbol(guard): "none",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, init with headers instance, with auth header already set 1`] = `
[
  "https://test.com",
  {
    "headers": Headers {
      Symbol(headers list): HeadersList {
        "cookies": null,
        Symbol(headers map): Map {
          "authorization" => {
            "name": "authorization",
            "value": "abc",
          },
        },
        Symbol(headers map sorted): null,
      },
      Symbol(guard): "none",
    },
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, no init, with auth header 1`] = `
[
  "https://test.com",
  {
    "headers": [
      [
        "Authorization",
        "my auth token",
      ],
    ],
  },
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, url allowed by config allow list, but no request 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, url allowed by config baseUrl, but no request 1`] = `
[
  "https://test.com",
  undefined,
]
`;

exports[`createFetchApiForwardAuthMiddleware Should work with string input, url allowed by function, but no request 1`] = `
[
  "https://test.com",
  undefined,
]
`;
