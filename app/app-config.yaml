app:
  title: ADP Portal
  baseUrl: http://localhost:3000
  support:
    url: https://github.com/defra/adp-portal/issues
    items:
      - title: Issues
        icon: github
        links:
          - url: https://github.com/defra/adp-portal/issues
            title: GitHub Issues

organization:
  name: 'Azure Development Platform: '

permission:
  enabled: true

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  reading:
    allow:
      - host: 'raw.githubusercontent.com'
  database:
    client: better-sqlite3
    connection: ':memory:'
  auth:
    keys:
      - secret: ${BACKEND_PLUGINS_SECRET}

proxy:
  endpoints:
    '/grafana/api':
      target: ${GRAFANA_ENDPOINT}
      headers:
        Authorization: Bearer ${GRAFANA_TOKEN}
    '/adp-portal-api':
      target: ${ADP_PORTAL_API_ENDPOINT}
      changeOrigin: true
      secure: false

grafana:
  domain: ${GRAFANA_ENDPOINT}
  unifiedAlerting: false

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
techdocs:
  builder: 'local'
  generator:
    runIn: 'local'
    mkdocs:
      omitTechdocsCorePlugin: false
      defaultPlugins: ['techdocs-core']
  publisher:
    type: 'local'
  cache:
    ttl: 3600000
    readTimeout: 500

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - name: ${SND1_CLUSTER_NAME}
          url: ${SND1_CLUSTER_API_SERVER_ADDRESS}
          authProvider: azure
          skipTLSVerify: true
          skipMetricsLookup: true
        - name: ${SND2_CLUSTER_NAME}
          url: ${SND2_CLUSTER_API_SERVER_ADDRESS}
          authProvider: azure
          skipTLSVerify: true
          skipMetricsLookup: true
        - name: ${SND3_CLUSTER_NAME}
          url: ${SND3_CLUSTER_API_SERVER_ADDRESS}
          authProvider: azure
          skipTLSVerify: true
          skipMetricsLookup: true

gitops:
  readOnly: true # disable sync/suspend/resume of resources

integrations:
  azure:
    - host: dev.azure.com
      credentials:
        - clientId: ${AUTH_MICROSOFT_CLIENT_ID}
          clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
          tenantId: ${AUTH_MICROSOFT_TENANT_ID}

  github:
    - host: github.com
      apps:
        - $include: github-app-configuration.yaml

rbac:
  platformAdminsGroup: ${ADP_PORTAL_PLATFORM_ADMINS_GROUP}
  programmeAdminGroup: ${ADP_PORTAL_PROGRAMME_ADMINS_GROUP}
  adpPortalUsersGroup: ${ADP_PORTAL_USERS_GROUP}

auth:
  keys:
    - secret: ${BACKEND_PLUGINS_SECRET}

  environment: sandpit
  providers:
    microsoft:
      sandpit:
        clientId: ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}

    github:
      sandpit:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

azureDevOps:
  host: dev.azure.com
  token: ${ADO_PAT}
  organization: ${ADO_ORGANIZATION}

github:
  host: github.com
  organization: ${GITHUB_ORGANIZATION}
  platformAdmins: adp-platform-admins

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow:
        [Component, System, API, Resource, Location, Template, Domain, Group]

  # Providers configured to scan repos in the specified organizations for components to add to the catalog.
  # Assumes a catalog-info.yml file is present in the root of the repo.
  providers:
    github:
      defra:
        organization: 'defra-adp-sandpit'
        catalogPath: '/catalog-info.yaml'
        filters:
          repository: '^(adp-portal-.+|techdocs-.+)'
        schedule:
          frequency: { minutes: 30 }
          timeout: { minutes: 5 }

    microsoftGraphOrg:
      default:
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}
        queryMode: basic
        user:
          select:
            ['id', 'mail', 'displayName', 'description', 'userPrincipalName']
        userGroupMember:
          filter: "displayName eq '${ADP_PORTAL_PLATFORM_ADMINS_GROUP}' or startsWith(displayName, '${ADP_PORTAL_USERS_GROUP_PREFIX}')"
        group:
          filter: "displayName eq '${ADP_PORTAL_PLATFORM_ADMINS_GROUP}' or startsWith(displayName, '${ADP_PORTAL_USERS_GROUP_PREFIX}')"
        schedule:
          frequency: { hours: 1 }
          timeout: { minutes: 50 }
          initialDelay: { seconds: 15 }

  # 'all users'
  # Locations configured to import static data into the catalog
  locations:
    - type: url
      target: https://github.com/DEFRA/adp-software-templates/blob/main/catalog-model/all.yaml

techRadar:
  data: https://raw.githubusercontent.com/defra/adp-software-templates/main/tech-radars/development-tech-radar.json

adp:
  fluxOnboarding:
    apiBaseUrl: ${ADP_PORTAL_API_ENDPOINT}/FluxTeamConfig
    defaultConfigVariables:
      - key: TEAM_CPU_QUOTA
        value: '2000'
      - key: TEAM_MEMORY_QUOTA
        value: 3000Mi
      - key: TEAM_PODS_QUOTA
        value: '20'
  githubTeams:
    apiBaseUrl: ${ADP_PORTAL_API_ENDPOINT}/github/teams
