app:
  title: ADP Portal
  baseUrl: http://localhost:3000
  support:
    url: https://github.com/defra/adp-portal/issues
    items:
      - title: Issues
        icon: github
        links:
          - url: https://github.com/defra/adp-portal/issues
            title: GitHub Issues

organization:
  name: "Azure Development Platform: "

permission:
  enabled: false

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  reading:
    allow:
      - host: 'raw.githubusercontent.com'
  database:
    client: better-sqlite3
    connection: ':memory:'

proxy:
  '/grafana/api':
    target:  ${GRAFANA_ENDPOINT}
    headers:
      Authorization: Bearer ${GRAFANA_TOKEN}

grafana:
  domain:  ${GRAFANA_ENDPOINT}
  unifiedAlerting: false

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
techdocs:
  builder: 'local'
  generator:
    runIn: 'local'
    mkdocs:
      omitTechdocsCorePlugin: false
      defaultPlugins: ['techdocs-core']
  publisher:
    type: 'local'
  cache:
    ttl: 3600000
    readTimeout: 500

integrations:
  azure:
    - host: dev.azure.com
      credentials:
        - clientId: ${AUTH_MICROSOFT_CLIENT_ID}
          clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
          tenantId: ${AUTH_MICROSOFT_TENANT_ID}
          
  github:
    - host: github.com
      apps:
        - $include: github-app-configuration.yaml

auth:
  environment: sandpit
  providers:
    microsoft:
      sandpit:
        clientId: ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}
    
    github:
      sandpit:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

azureDevOps:
  host: dev.azure.com
  token: ${ADO_PAT}
  organization: ${ADO_ORGANIZATION}

github:
  host: github.com
  organization: ${GITHUB_ORGANIZATION}

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template, Domain, Group]
  
  # Providers configured to scan repos in the specified organizations for components to add to the catalog.
  # Assumes a catalog-info.yml file is present in the root of the repo.
  providers:
    github:
      adpSandpit:
        organization: 'defra-adp-sandpit'
        catalogPath: '/catalog-info.yaml'
        filters:
          branch: 'main'
        schedule:
          frequency: { minutes: 30 }
          timeout: { minutes: 5 }
      #defra:
      #  organization: 'defra'
      #  catalogPath: '/catalog-info.yaml'
      #  filters:
      #    branch: 'master'
      #    repository: '(ffc-.+|adp-.+)'
      #  schedule:
      #    frequency: { minutes: 30 }
      #    timeout: { minutes: 5 }

    microsoftGraphOrg:
      default:
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}
        userGroupMember:
          filter: "displayName eq 'AG-Azure-CDO-ADP-PlatformEngineers'"
        group:
          filter: "displayName eq 'AG-Azure-CDO-ADP-PlatformEngineers'"
        schedule:
          frequency: { minutes: 60 }
          timeout: { minutes: 10 }

  # Locations configured to import static data into the catalog
  locations:
    - type: url
      target: https://github.com/defra/adp-software-templates/blob/main/catalog-model/defra-org.yaml
      rules:
        - allow: [User, Group]

    - type: url
      target: https://github.com/defra/adp-software-templates/blob/main/catalog-model/all.yaml

techRadar: 
  data: https://raw.githubusercontent.com/defra/adp-software-templates/main/tech-radars/development-tech-radar.json
